name: Install ArgoCD and Deploy App

on:
  workflow_dispatch:

permissions:
  id-token: write
  contents: read

env:
  TF_WORKING_DIR: .
  TF_VAR_IMAGE_TAG: ${{ github.run_id }}

jobs:
  validate-plan-build:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Log in to Azure using OIDC
        uses: azure/login@v1
        with:
          client-id: ${{ secrets.AZURE_CLIENT_ID }}
          tenant-id: ${{ secrets.AZURE_TENANT_ID }}
          subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}
          enable-AzPSSession: false
          
      - name: Set up AKS credentials
        run: |
          az aks get-credentials --resource-group ashishtech --name aks-cluster --overwrite-existing

      - name: Install kubelogin
        run: |
          curl -LO https://github.com/Azure/kubelogin/releases/latest/download/kubelogin-linux-amd64.zip
          unzip kubelogin-linux-amd64.zip
          sudo mv kubelogin /usr/local/bin
          rm kubelogin-linux-amd64.zip



      - name: Install Argo CD
        run: |
          kubectl create namespace argocd --dry-run=client -o yaml | kubectl apply -f -
          kubectl apply -n argocd -f https://raw.githubusercontent.com/argoproj/argo-cd/stable/manifests/install.yaml

          echo "Waiting for Argo CD server to be ready..."
          kubectl rollout status deployment argocd-server -n argocd --timeout=180s

      - name: Create Argo CD Application
        run: |
          cat <<EOF | kubectl apply -f -
          apiVersion: argoproj.io/v1alpha1
          kind: Application
          metadata:
            name: my-app
            namespace: argocd
          spec:
            project: default
            source:
              repoURL: https://github.com/YOUR_GITHUB_USER/YOUR_REPO
              targetRevision: HEAD
              path: path/to/manifests
            destination:
              server: https://kubernetes.default.svc
              namespace: default
            syncPolicy:
              automated:
                prune: true
                selfHeal: true
          EOF
